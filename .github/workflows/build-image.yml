on:
  push:
    branches: [ main ]
  workflow_dispatch:
    

name: AWS ECR push
jobs:

  provision-env:
   name: "Terraform Provision Env"
   runs-on: ubuntu-latest
   env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   steps:
   - name: Get code
     uses: actions/checkout@v3
     with:
        repository: 'mahdi-hamdii/dev-env-aws-cicd'
        ref: 'main'
        token: ${{ secrets.GH_TOKEN }}
      
   - name: Setup Terraform CLI
     uses: hashicorp/setup-terraform@v2 
   - name: Add the private key
     env:
        PRIVATE_KEY: ${{ secrets.CICD_PRIVATE_KEY }}
     run: echo "$PRIVATE_KEY" > private_key.pem
   - name: echo code
     run: ls /home/runner/work/cgbbox_admin_pipeline/cgbbox_admin_pipeline
   - name: Change Private Key permissions
     run: chmod 400 /home/runner/work/cgbbox_admin_pipeline/dev-env-aws-cicd/private_key.pem

   - name: init and  apply
     run: |
          terraform init
          terraform apply -var 'private_key_path=/home/runner/work/dev-env-aws-cicd/dev-env-aws-cicd/private_key.pem' -auto-approve

  push-ecr:
    needs: [provision-env]
    permissions:
      id-token: write
      contents: read
    name: Build & Push ECR
    runs-on: ubuntu-latest
    outputs:
      image-date: ${{ steps.date.outputs.date }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2

    # - name: Get current date
    #   id: date
    #   run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M-%S')"

    # - name: Build and push
    #   uses: docker/build-push-action@v3
    #   with:
    #     file: Dockerfile
    #     tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.REPO_NAME }}:${{ steps.date.outputs.date }}
    #     push: true
  # Deploy:
  #   name: Deploy to EC2
  #   needs: push-ecr
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: ssh to EC2
  #     env:
  #           PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
  #           HOSTNAME : ${{ secrets.HOSTNAME  }}
  #           USER_NAME : ${{ secrets.USER_NAME  }}
  #     run: |
  #       echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
  #       ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
  #       #Now we have got the access of EC2 and we will start the deploy .
  #       docker pull 835670117231.dkr.ecr.eu-west-3.amazonaws.com/cgbox_admin:2023-01-19-22-50-25
        # '