on:
  push:
    branches: [ main ]
  workflow_dispatch:
    

name: AWS ECR push
jobs:
  push-ecr:
    permissions:
      id-token: write
      contents: read
    name: Build & Push ECR
    runs-on: ubuntu-latest
    outputs:
      image-date: ${{ steps.date.outputs.date }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M-%S')"

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        file: Dockerfile
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.REPO_NAME }}:${{ steps.date.outputs.date }}
        push: true
  Deploy:
    name: Deploy to EC2
    needs: push-ecr
    runs-on: ubuntu-latest
    steps:
    - name: ssh to EC2
      env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
        #Now we have got the access of EC2 and we will start the deploy .
        docker ps